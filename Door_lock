#include <Wire.h> 
#include <LiquidCrystal_I2C.h>
#include <Keypad.h>
#include <Servo.h>

Servo myservo;
int pos=0;
int currentposition=0;
int invalidcount=12;
char* password="4567";

LiquidCrystal_I2C lcd(0x27,16,2);  

const byte filas= 4; 
const byte columnas= 4; 
char keymap[filas][columnas]= 
  {
  {'1', '2', '3', 'A'}, 
  {'4', '5', '6', 'B'}, 
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
  };
byte pinesFilas[filas] = {12,11,10,9}; //pines de las filas
byte pinesColumnas[columnas]= {8,7,6,5}; //pines de las columnas

  //Se define el Teclado con los parametros defines anteriormente (pines, filas y columnas)
Keypad Teclado= Keypad(makeKeymap(keymap), pinesFilas, pinesColumnas, filas, columnas);
char Tecla; //almacena la tecla presionada


// Abrir puerta

 
void unlockdoor()
{
delay(900);
lcd.setCursor(0,0);
lcd.println(" ");
lcd.setCursor(1,0);
lcd.print("Acceso Concedido");
lcd.setCursor(4,1);
lcd.println("BIENVENIDO!!");
lcd.setCursor(15,1);
lcd.println(" ");
lcd.setCursor(16,1);
lcd.println(" ");
lcd.setCursor(14,1);
lcd.println(" ");
lcd.setCursor(13,1);
lcd.println(" ");
for(pos = 180; pos>=0; pos-=5) // goes from 180 degrees to 0 degrees
{
myservo.write(pos); // tell servo to go to position in variable 'pos'
delay(5); // waits 15ms for the servo to reach the position
}
delay(2000);
delay(1000);
counterbeep();
delay(1000);
for(pos = 0; pos <= 180; pos +=5) // goes from 0 degrees to 180 degrees
{ // in steps of 1 degree
myservo.write(pos); // tell servo to go to position in variable 'pos'
delay(15); 
currentposition=0; 
lcd.clear();
displayscreen();
}
}

//Contra_incorrecta

void incorrect()
{
delay(500);
lcd.clear();
lcd.setCursor(1,0);
lcd.print("Contrasena");
lcd.setCursor(6,0);
lcd.print("INCORRECTO");
lcd.setCursor(15,1);
lcd.println(" ");
lcd.setCursor(4,1);
lcd.println("ADIOS!!!");
lcd.setCursor(13,1);
lcd.println(" ");
Serial.println("INCORRECTO NO ESTA AUTORIZADO");
delay(3000);
lcd.clear();
displayscreen();
}

//************** CLEAR THE SCREEN!!!*************//
void clearscreen()
{
lcd.setCursor(0,0);
lcd.println(" ");
lcd.setCursor(0,1);
lcd.println(" ");
lcd.setCursor(0,2);
lcd.println(" ");
lcd.setCursor(0,3);
lcd.println(" ");
}

void displayscreen()
{
 
lcd.setCursor(0,0);
lcd.println("*CONTRASENA:*");
lcd.setCursor(1 ,1);
 
lcd.println("REQUERIDA!!");
}

void armservo()
{
 
for (pos=180;pos<=180;pos+=50)
{
myservo.write(pos);
delay(5);
}
delay(5000);
 
for(pos=180;pos>=0;pos-=50)
{
myservo.write(pos);
}
 
}


//**********COUNTER BEEP**********//
void counterbeep()
{
delay(1200); 
lcd.clear();
//digitalWrite(buzz, HIGH);
lcd.setCursor(2,15);
lcd.println(" ");
lcd.setCursor(2,14);
lcd.println(" ");
lcd.setCursor(2,0);
delay(200);
lcd.println("GET IN WITHIN:::");
 
lcd.setCursor(4,1);
lcd.print("5");
delay(200);
lcd.clear();
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
//digitalWrite(buzz,LOW);
delay(1000);
//2
//digitalWrite(buzz, HIGH);
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
lcd.setCursor(4,1); //2
lcd.print("4");
delay(100);
lcd.clear();
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
//digitalWrite(buzz,LOW);
delay(1000);
//3
//digitalWrite(buzz, HIGH);
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
lcd.setCursor(4,1); //3
lcd.print("3");
delay(100);
lcd.clear();
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
//digitalWrite(buzz,LOW);
delay(1000);
//4
//digitalWrite(buzz, HIGH);
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
lcd.setCursor(4,1); //4
lcd.print("2");
delay(100);
lcd.clear();
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN:");
//digitalWrite(buzz,LOW);
delay(1000);
//
//digitalWrite(buzz, HIGH);
lcd.setCursor(4,1);
lcd.print("1");
delay(100);
lcd.clear();
lcd.setCursor(2,0);
lcd.println("GET IN WITHIN::");
//digitalWrite(buzz,LOW);
delay(1000);
//5
//digitalWrite(buzz, HIGH);
delay(40);
//digitalWrite(buzz,LOW);
delay(40);
//digitalWrite(buzz, HIGH);
delay(40);
//digitalWrite(buzz,LOW);
delay(40);
//digitalWrite(buzz, HIGH);
delay(40);
//digitalWrite(buzz,LOW);
delay(40);
//digitalWrite(buzz, HIGH);
delay(40);
//digitalWrite(buzz,LOW);
lcd.clear();
lcd.setCursor(2,0);
lcd.print("CERRANDO");
delay(500);
lcd.setCursor(12,0);
lcd.print(".");
delay(500);
lcd.setCursor(13,0);
lcd.print(".");
delay(500);
lcd.setCursor(14,0);
lcd.print(".");
delay(400);
lcd.clear();
lcd.setCursor(4,0);
lcd.print("CERRADO!");
delay(440);
}



void setup() {
  displayscreen();
  Serial.begin(9600);
  Wire.begin();
  lcd.begin(16,2);
  lcd.backlight();
  myservo.attach(13);
}


//LOOP

void loop() {
//Tecla = Teclado.getKey(); //Se almacena el valor de la tecla oprimida
//    delay(100); // delay de 100 milisegundos
//    if (Tecla){
//      Serial.println(Tecla); // Si la tecla es oprimida se imprime
//    }
if( currentposition==0)
{
displayscreen();
 
}
int l ;
char Tecla=Teclado.getKey();
if(Tecla!=NO_KEY)
{
lcd.clear();
lcd.setCursor(0,0);
lcd.print("Contrasena:");
lcd.setCursor(7,1);
lcd.print(" ");
lcd.setCursor(7,1);
for(l=0;l<=currentposition;++l)
{
lcd.print("*");
}
}
if (Tecla==password[currentposition])
{
++currentposition;
if(currentposition==4)
{
 
unlockdoor();
currentposition=0;
}
}
else
{
++invalidcount;
incorrect();
currentposition=0;
}
}
